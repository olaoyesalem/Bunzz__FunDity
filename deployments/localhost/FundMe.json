{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "Fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressCreatedToCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "amountToAddressFunded",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_addressName",
          "type": "string"
        }
      ],
      "name": "createMyFunDity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "creatorToAddressCreated",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "f_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "fundAddress",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funditees",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "funditeeAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getAddressBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "listOfFunDityAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "list_of_creators",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "nameToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfAddresses",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "withdrawFromAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x1d31ea718471fc252b26e2cd84845caca0734164e97f0b24c83bd16c4b09102a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1413530",
    "logsBloom": "0x
    "blockHash": "0x19df24c20b2c1c4c9d51ba18398a2d4d2e8e773f1c39821f756ddb56e9f44179",
    "transactionHash": "0x1d31ea718471fc252b26e2cd84845caca0734164e97f0b24c83bd16c4b09102a",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1413530",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "821b5790f03142c89daf1bc0fc30f2d4",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"Fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressCreatedToCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"amountToAddressFunded\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_addressName\",\"type\":\"string\"}],\"name\":\"createMyFunDity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"creatorToAddressCreated\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"f_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"fundAddress\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funditees\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"funditeeAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getAddressBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listOfFunDityAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"list_of_creators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"nameToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfAddresses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"withdrawFromAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Olaoye Salem\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundMe.sol\":{\"content\":\"\\r\\n//SPDX-License-Identifier:MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\n\\r\\n/**\\r\\n @title A contract for crowd funding\\r\\n @author Olaoye Salem\\r\\n @notice This contract is to demo a sample funding contract\\r\\n @dev This implements price feeds as our library\\r\\n */\\r\\n \\r\\ncontract FundMe{\\r\\n\\r\\naddress immutable i_owner;\\r\\nuint256 constant MINIMUM_USD = 1e10*18;// 1 dollar\\r\\naddress [] public funders; \\r\\naddress [] public f_funders;\\r\\nmapping(address=>uint256) public addressToAmountFunded;\\r\\nmapping(uint256=>address) public amountToAddressFunded;\\r\\naddress [] public listOfFunDityAddresses;\\r\\nuint256 public numberOfAddresses=listOfFunDityAddresses.length;\\r\\nmapping (string=>address ) public nameToAddress;\\r\\nFunDitees[] public funditees;\\r\\n\\r\\n    address []  public list_of_creators;\\r\\n    mapping(address=>address) public creatorToAddressCreated;\\r\\n    mapping(address=>address) public addressCreatedToCreator;\\r\\n    struct  FunDitees{\\r\\n    address payable funditeeAddress;\\r\\n    string  name;\\r\\n    }\\r\\n    bytes32 [] private hashedAddressList;\\r\\nconstructor(){\\r\\n    i_owner = msg.sender;\\r\\n}\\r\\n\\r\\nmodifier onlyOwner(){\\r\\n    require(msg.sender==i_owner);\\r\\n    _;\\r\\n}\\r\\nmodifier sendError(){\\r\\n\\r\\nrequire(msg.value>=MINIMUM_USD, \\\"Send More Eth\\\");\\r\\n_;\\r\\n}\\r\\n\\r\\n   modifier checkDuplicateName(string memory _addressName){\\r\\n       bytes32 addressName= keccak256(abi.encode(_addressName));\\r\\n       uint256 length = hashedAddressList.length;\\r\\n       for(uint256 i=0; i<length;++i){\\r\\n          \\r\\n           require(addressName!=hashedAddressList[i],\\\" Name Has Already Been taken\\\");// Just So beautiful\\r\\n       }\\r\\n        _;\\r\\n    }\\r\\n    modifier checkAddress( address _address){\\r\\n        uint256 length =listOfFunDityAddresses.length;\\r\\n        for(uint256 i=0; i<length;){\\r\\n            unchecked{\\r\\n                ++i;\\r\\n            }\\r\\n            require(_address==listOfFunDityAddresses[i],\\\"Address not in the list\\\");\\r\\n        }\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function Fund() public payable  {\\r\\n        funders.push(msg.sender);\\r\\n        addressToAmountFunded[msg.sender]+=msg.value;\\r\\n\\r\\n}\\r\\n    function withdraw()public onlyOwner {\\r\\n        for(uint i=0; i<funders.length; i++){\\r\\n            addressToAmountFunded[funders[i]]=0;\\r\\n        }\\r\\n        funders = new address[](0);\\r\\n        (bool callSuccess, )=payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n            require(callSuccess,\\\"call Failed\\\");\\r\\n    }\\r\\n    \\r\\n    \\r\\n\\r\\n      function createMyFunDity(string memory _addressName) public checkDuplicateName(_addressName)  {\\r\\n        address caller  = msg.sender;   \\r\\n        list_of_creators.push(caller);                                             \\r\\n     bytes32 hashedAddressName = keccak256(abi.encode(_addressName));\\r\\n     hashedAddressList.push(hashedAddressName);// added  hashed to the array to comapre .\\r\\n\\r\\n     bytes32 hashedString = keccak256(abi.encode(_addressName, msg.sender,block.timestamp));\\r\\n     address castedAddress = address(uint160(uint256(hashedString)));\\r\\n     address payable funditeeAddress = payable(castedAddress);\\r\\n    funditees.push(FunDitees(funditeeAddress,_addressName));\\r\\n     listOfFunDityAddresses.push(funditeeAddress);\\r\\n     nameToAddress[_addressName]=funditeeAddress;\\r\\n     creatorToAddressCreated[caller]=funditeeAddress;\\r\\n     addressCreatedToCreator[funditeeAddress]=caller;\\r\\n    \\r\\n\\r\\n    }\\r\\n\\r\\n    function fundAddress(address payable _address) public payable{\\r\\n           bool sent = _address.send(msg.value);\\r\\n        require(sent, \\\"Failed to send ETH\\\");// Done\\r\\n    }\\r\\n\\r\\n    function withdrawFromAddress( address  payable  _address) public {\\r\\n     // we need to get the addresses to the creator, which has been mapped, then\\r\\n    // only the address can call this function\\r\\n    //    address caller =   addressCreatedToCreator[_address];\\r\\n    //    require(msg.sender==caller, \\\"Wrong Sender\\\");\\r\\n    //    bool sent =payable(msg.sender).send(1000);\\r\\n    //     require(sent, \\\"Failed to send ETH\\\");\\r\\n    \\r\\n    uint256 balance = address(_address).balance;//  balance of the address we want to withdraw from.\\r\\n    bool sent =payable(address(this)).send(balance);\\r\\n    require(sent, \\\"Failed to send ETH\\\");\\r\\n\\r\\n  \\r\\n   \\r\\n    // This is actually sending funds from contract address to the contract address using\\r\\n    // the balance of the payable address - and it is wrong\\r\\n\\r\\n    // we need to send money from a random address to another address\\r\\n\\r\\n    // questions:\\r\\n    // ask chatGPT how to create a payable address and ask if funds get into it , how can we get it out.\\r\\n    //ask chatGpt how to create a payable address and a private key atttached to the address and see how we can connect it and\\r\\n    // withdraw from the address.\\r\\n    // we have an address an money is in it,we created the address, can we get any molney out of it\\r\\n    /// can we get a private key from an hashed function \\r\\n    //Opposite of payable\\r\\n    // \\r\\n    // how to transfer from an address using the private key combination in solidity\\r\\n\\r\\n        \\r\\n    }\\r\\n\\r\\n    function getAddressBalance(address _address) public view returns(uint256){\\r\\n        uint256 balance = address(_address).balance;\\r\\n        return balance;\\r\\n    }\\r\\n\\r\\n    receive() external payable{\\r\\n        Fund();\\r\\n    }\\r\\n    fallback()external payable{\\r\\n        Fund();\\r\\n    }\\r\\n\\r\\n\\r\\n}\\r\\n//withdraw function is not working\",\"keccak256\":\"0x6acfaaf7bc6f58ba792f49adfbc39cd781431f5b0b7cc13a2a4af9073bbbc9c2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405260048054905060055534801561001957600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060805160601c61189661006f60003960006105a101526118966000f3fe6080604052600436106101025760003560e01c80637b904a2a11610095578063a886a67a11610064578063a886a67a14610358578063d2f947e014610395578063d37dd5e5146103be578063dc0d3dff146103fb578063ea9ac9de1461043857610111565b80637b904a2a1461029657806381b3bc3b146102b25780638ae83773146102dd578063923b930a1461031a57610111565b806344b74cd3116100d157806344b74cd3146101e95780636ce1417e146102265780636cef7b03146102305780637282b2e81461026d57610111565b806308d88aad1461011b57806335046722146101585780633ccfd60b146101955780633e47d6f3146101ac57610111565b366101115761010f610475565b005b610119610475565b005b34801561012757600080fd5b50610142600480360381019061013d91906111b7565b610530565b60405161014f919061137c565b60405180910390f35b34801561016457600080fd5b5061017f600480360381019061017a919061115d565b610579565b60405161018c9190611487565b60405180910390f35b3480156101a157600080fd5b506101aa61059f565b005b3480156101b857600080fd5b506101d360048036038101906101ce919061115d565b6107ac565b6040516101e09190611487565b60405180910390f35b3480156101f557600080fd5b50610210600480360381019061020b919061115d565b6107c4565b60405161021d919061137c565b60405180910390f35b61022e610475565b005b34801561023c57600080fd5b5061025760048036038101906102529190611200565b6107f7565b604051610264919061137c565b60405180910390f35b34801561027957600080fd5b50610294600480360381019061028f91906111b7565b610836565b005b6102b060048036038101906102ab919061118a565b610c65565b005b3480156102be57600080fd5b506102c7610ce2565b6040516102d49190611487565b60405180910390f35b3480156102e957600080fd5b5061030460048036038101906102ff9190611200565b610ce8565b604051610311919061137c565b60405180910390f35b34801561032657600080fd5b50610341600480360381019061033c9190611200565b610d1b565b60405161034f929190611397565b60405180910390f35b34801561036457600080fd5b5061037f600480360381019061037a9190611200565b610df7565b60405161038c919061137c565b60405180910390f35b3480156103a157600080fd5b506103bc60048036038101906103b7919061118a565b610e36565b005b3480156103ca57600080fd5b506103e560048036038101906103e09190611200565b610ed0565b6040516103f2919061137c565b60405180910390f35b34801561040757600080fd5b50610422600480360381019061041d9190611200565b610f0f565b60405161042f919061137c565b60405180910390f35b34801561044457600080fd5b5061045f600480360381019061045a919061115d565b610f4e565b60405161046c919061137c565b60405180910390f35b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610527919061152a565b92505081905550565b6006818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff1631905080915050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105f757600080fd5b60005b60008054905081101561069c576000600260008084815481106106205761061f61171a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061069490611673565b9150506105fa565b50600067ffffffffffffffff8111156106b8576106b7611749565b5b6040519080825280602002602001820160405280156106e65781602001602082028036833780820191505090505b50600090805190602001906106fc929190610f81565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161072390611367565b60006040518083038185875af1925050503d8060008114610760576040519150601f19603f3d011682016040523d82523d6000602084013e610765565b606091505b50509050806107a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a090611467565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6004818154811061080757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060008160405160200161084a91906113c7565b6040516020818303038152906040528051906020012090506000600b80549050905060005b818110156108e957600b818154811061088b5761088a61171a565b5b90600052602060002001548314156108d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cf90611427565b60405180910390fd5b806108e290611673565b905061086f565b5060003390506008819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008560405160200161096591906113c7565b604051602081830303815290604052805190602001209050600b81908060018154018082558091505060019003906000526020600020016000909190919091505560008633426040516020016109bd939291906113e9565b60405160208183030381529060405280519060200120905060008160001c90506000819050600760405180604001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018b815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610a9b92919061100b565b5050506004819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060068a604051610b129190611350565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050905080610cde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd590611447565b60405180910390fd5b5050565b60055481565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60078181548110610d2b57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610d7490611610565b80601f0160208091040260200160405190810160405280929190818152602001828054610da090611610565b8015610ded5780601f10610dc257610100808354040283529160200191610ded565b820191906000526020600020905b815481529060010190602001808311610dd057829003601f168201915b5050505050905082565b60018181548110610e0757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff1631905060003073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050905080610ecb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec290611447565b60405180910390fd5b505050565b60088181548110610ee057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008181548110610f1f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054828255906000526020600020908101928215610ffa579160200282015b82811115610ff95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610fa1565b5b5090506110079190611091565b5090565b82805461101790611610565b90600052602060002090601f0160209004810192826110395760008555611080565b82601f1061105257805160ff1916838001178555611080565b82800160010185558215611080579182015b8281111561107f578251825591602001919060010190611064565b5b50905061108d9190611091565b5090565b5b808211156110aa576000816000905550600101611092565b5090565b60006110c16110bc846114c7565b6114a2565b9050828152602081018484840111156110dd576110dc61177d565b5b6110e88482856115ce565b509392505050565b6000813590506110ff8161181b565b92915050565b60008135905061111481611832565b92915050565b600082601f83011261112f5761112e611778565b5b813561113f8482602086016110ae565b91505092915050565b60008135905061115781611849565b92915050565b60006020828403121561117357611172611787565b5b6000611181848285016110f0565b91505092915050565b6000602082840312156111a05761119f611787565b5b60006111ae84828501611105565b91505092915050565b6000602082840312156111cd576111cc611787565b5b600082013567ffffffffffffffff8111156111eb576111ea611782565b5b6111f78482850161111a565b91505092915050565b60006020828403121561121657611215611787565b5b600061122484828501611148565b91505092915050565b61123681611592565b82525050565b61124581611580565b82525050565b6000611256826114f8565b611260818561150e565b93506112708185602086016115dd565b6112798161178c565b840191505092915050565b600061128f826114f8565b611299818561151f565b93506112a98185602086016115dd565b80840191505092915050565b60006112c2601c8361150e565b91506112cd8261179d565b602082019050919050565b60006112e560128361150e565b91506112f0826117c6565b602082019050919050565b6000611308600b8361150e565b9150611313826117ef565b602082019050919050565b600061132b600083611503565b915061133682611818565b600082019050919050565b61134a816115c4565b82525050565b600061135c8284611284565b915081905092915050565b60006113728261131e565b9150819050919050565b6000602082019050611391600083018461123c565b92915050565b60006040820190506113ac600083018561122d565b81810360208301526113be818461124b565b90509392505050565b600060208201905081810360008301526113e1818461124b565b905092915050565b60006060820190508181036000830152611403818661124b565b9050611412602083018561123c565b61141f6040830184611341565b949350505050565b60006020820190508181036000830152611440816112b5565b9050919050565b60006020820190508181036000830152611460816112d8565b9050919050565b60006020820190508181036000830152611480816112fb565b9050919050565b600060208201905061149c6000830184611341565b92915050565b60006114ac6114bd565b90506114b88282611642565b919050565b6000604051905090565b600067ffffffffffffffff8211156114e2576114e1611749565b5b6114eb8261178c565b9050602081019050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000611535826115c4565b9150611540836115c4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611575576115746116bc565b5b828201905092915050565b600061158b826115a4565b9050919050565b600061159d826115a4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156115fb5780820151818401526020810190506115e0565b8381111561160a576000848401525b50505050565b6000600282049050600182168061162857607f821691505b6020821081141561163c5761163b6116eb565b5b50919050565b61164b8261178c565b810181811067ffffffffffffffff8211171561166a57611669611749565b5b80604052505050565b600061167e826115c4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156116b1576116b06116bc565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f204e616d652048617320416c7265616479204265656e2074616b656e00000000600082015250565b7f4661696c656420746f2073656e64204554480000000000000000000000000000600082015250565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b50565b61182481611580565b811461182f57600080fd5b50565b61183b81611592565b811461184657600080fd5b50565b611852816115c4565b811461185d57600080fd5b5056fea2646970667358221220c1f687fd303cadfcac2d53a9802fd93de5c1121af3909e45e1a6fff6caf5a09664736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106101025760003560e01c80637b904a2a11610095578063a886a67a11610064578063a886a67a14610358578063d2f947e014610395578063d37dd5e5146103be578063dc0d3dff146103fb578063ea9ac9de1461043857610111565b80637b904a2a1461029657806381b3bc3b146102b25780638ae83773146102dd578063923b930a1461031a57610111565b806344b74cd3116100d157806344b74cd3146101e95780636ce1417e146102265780636cef7b03146102305780637282b2e81461026d57610111565b806308d88aad1461011b57806335046722146101585780633ccfd60b146101955780633e47d6f3146101ac57610111565b366101115761010f610475565b005b610119610475565b005b34801561012757600080fd5b50610142600480360381019061013d91906111b7565b610530565b60405161014f919061137c565b60405180910390f35b34801561016457600080fd5b5061017f600480360381019061017a919061115d565b610579565b60405161018c9190611487565b60405180910390f35b3480156101a157600080fd5b506101aa61059f565b005b3480156101b857600080fd5b506101d360048036038101906101ce919061115d565b6107ac565b6040516101e09190611487565b60405180910390f35b3480156101f557600080fd5b50610210600480360381019061020b919061115d565b6107c4565b60405161021d919061137c565b60405180910390f35b61022e610475565b005b34801561023c57600080fd5b5061025760048036038101906102529190611200565b6107f7565b604051610264919061137c565b60405180910390f35b34801561027957600080fd5b50610294600480360381019061028f91906111b7565b610836565b005b6102b060048036038101906102ab919061118a565b610c65565b005b3480156102be57600080fd5b506102c7610ce2565b6040516102d49190611487565b60405180910390f35b3480156102e957600080fd5b5061030460048036038101906102ff9190611200565b610ce8565b604051610311919061137c565b60405180910390f35b34801561032657600080fd5b50610341600480360381019061033c9190611200565b610d1b565b60405161034f929190611397565b60405180910390f35b34801561036457600080fd5b5061037f600480360381019061037a9190611200565b610df7565b60405161038c919061137c565b60405180910390f35b3480156103a157600080fd5b506103bc60048036038101906103b7919061118a565b610e36565b005b3480156103ca57600080fd5b506103e560048036038101906103e09190611200565b610ed0565b6040516103f2919061137c565b60405180910390f35b34801561040757600080fd5b50610422600480360381019061041d9190611200565b610f0f565b60405161042f919061137c565b60405180910390f35b34801561044457600080fd5b5061045f600480360381019061045a919061115d565b610f4e565b60405161046c919061137c565b60405180910390f35b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610527919061152a565b92505081905550565b6006818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff1631905080915050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146105f757600080fd5b60005b60008054905081101561069c576000600260008084815481106106205761061f61171a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061069490611673565b9150506105fa565b50600067ffffffffffffffff8111156106b8576106b7611749565b5b6040519080825280602002602001820160405280156106e65781602001602082028036833780820191505090505b50600090805190602001906106fc929190610f81565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161072390611367565b60006040518083038185875af1925050503d8060008114610760576040519150601f19603f3d011682016040523d82523d6000602084013e610765565b606091505b50509050806107a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a090611467565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6004818154811061080757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b8060008160405160200161084a91906113c7565b6040516020818303038152906040528051906020012090506000600b80549050905060005b818110156108e957600b818154811061088b5761088a61171a565b5b90600052602060002001548314156108d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108cf90611427565b60405180910390fd5b806108e290611673565b905061086f565b5060003390506008819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008560405160200161096591906113c7565b604051602081830303815290604052805190602001209050600b81908060018154018082558091505060019003906000526020600020016000909190919091505560008633426040516020016109bd939291906113e9565b60405160208183030381529060405280519060200120905060008160001c90506000819050600760405180604001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018b815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610a9b92919061100b565b5050506004819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060068a604051610b129190611350565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050905080610cde576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd590611447565b60405180910390fd5b5050565b60055481565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60078181548110610d2b57600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610d7490611610565b80601f0160208091040260200160405190810160405280929190818152602001828054610da090611610565b8015610ded5780601f10610dc257610100808354040283529160200191610ded565b820191906000526020600020905b815481529060010190602001808311610dd057829003601f168201915b5050505050905082565b60018181548110610e0757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff1631905060003073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050905080610ecb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec290611447565b60405180910390fd5b505050565b60088181548110610ee057600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008181548110610f1f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054828255906000526020600020908101928215610ffa579160200282015b82811115610ff95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610fa1565b5b5090506110079190611091565b5090565b82805461101790611610565b90600052602060002090601f0160209004810192826110395760008555611080565b82601f1061105257805160ff1916838001178555611080565b82800160010185558215611080579182015b8281111561107f578251825591602001919060010190611064565b5b50905061108d9190611091565b5090565b5b808211156110aa576000816000905550600101611092565b5090565b60006110c16110bc846114c7565b6114a2565b9050828152602081018484840111156110dd576110dc61177d565b5b6110e88482856115ce565b509392505050565b6000813590506110ff8161181b565b92915050565b60008135905061111481611832565b92915050565b600082601f83011261112f5761112e611778565b5b813561113f8482602086016110ae565b91505092915050565b60008135905061115781611849565b92915050565b60006020828403121561117357611172611787565b5b6000611181848285016110f0565b91505092915050565b6000602082840312156111a05761119f611787565b5b60006111ae84828501611105565b91505092915050565b6000602082840312156111cd576111cc611787565b5b600082013567ffffffffffffffff8111156111eb576111ea611782565b5b6111f78482850161111a565b91505092915050565b60006020828403121561121657611215611787565b5b600061122484828501611148565b91505092915050565b61123681611592565b82525050565b61124581611580565b82525050565b6000611256826114f8565b611260818561150e565b93506112708185602086016115dd565b6112798161178c565b840191505092915050565b600061128f826114f8565b611299818561151f565b93506112a98185602086016115dd565b80840191505092915050565b60006112c2601c8361150e565b91506112cd8261179d565b602082019050919050565b60006112e560128361150e565b91506112f0826117c6565b602082019050919050565b6000611308600b8361150e565b9150611313826117ef565b602082019050919050565b600061132b600083611503565b915061133682611818565b600082019050919050565b61134a816115c4565b82525050565b600061135c8284611284565b915081905092915050565b60006113728261131e565b9150819050919050565b6000602082019050611391600083018461123c565b92915050565b60006040820190506113ac600083018561122d565b81810360208301526113be818461124b565b90509392505050565b600060208201905081810360008301526113e1818461124b565b905092915050565b60006060820190508181036000830152611403818661124b565b9050611412602083018561123c565b61141f6040830184611341565b949350505050565b60006020820190508181036000830152611440816112b5565b9050919050565b60006020820190508181036000830152611460816112d8565b9050919050565b60006020820190508181036000830152611480816112fb565b9050919050565b600060208201905061149c6000830184611341565b92915050565b60006114ac6114bd565b90506114b88282611642565b919050565b6000604051905090565b600067ffffffffffffffff8211156114e2576114e1611749565b5b6114eb8261178c565b9050602081019050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b6000611535826115c4565b9150611540836115c4565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611575576115746116bc565b5b828201905092915050565b600061158b826115a4565b9050919050565b600061159d826115a4565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156115fb5780820151818401526020810190506115e0565b8381111561160a576000848401525b50505050565b6000600282049050600182168061162857607f821691505b6020821081141561163c5761163b6116eb565b5b50919050565b61164b8261178c565b810181811067ffffffffffffffff8211171561166a57611669611749565b5b80604052505050565b600061167e826115c4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156116b1576116b06116bc565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f204e616d652048617320416c7265616479204265656e2074616b656e00000000600082015250565b7f4661696c656420746f2073656e64204554480000000000000000000000000000600082015250565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b50565b61182481611580565b811461182f57600080fd5b50565b61183b81611592565b811461184657600080fd5b50565b611852816115c4565b811461185d57600080fd5b5056fea2646970667358221220c1f687fd303cadfcac2d53a9802fd93de5c1121af3909e45e1a6fff6caf5a09664736f6c63430008070033",
  "devdoc": {
    "author": "Olaoye Salem",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 337,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 340,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "f_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 344,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 348,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "amountToAddressFunded",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 351,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "listOfFunDityAddresses",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 355,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "numberOfAddresses",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 359,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "nameToAddress",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_string_memory_ptr,t_address)"
      },
      {
        "astId": 363,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funditees",
        "offset": 0,
        "slot": "7",
        "type": "t_array(t_struct(FunDitees)379_storage)dyn_storage"
      },
      {
        "astId": 366,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "list_of_creators",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 370,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "creatorToAddressCreated",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 374,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressCreatedToCreator",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 382,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "hashedAddressList",
        "offset": 0,
        "slot": "11",
        "type": "t_array(t_bytes32)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(FunDitees)379_storage)dyn_storage": {
        "base": "t_struct(FunDitees)379_storage",
        "encoding": "dynamic_array",
        "label": "struct FundMe.FunDitees[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(FunDitees)379_storage": {
        "encoding": "inplace",
        "label": "struct FundMe.FunDitees",
        "members": [
          {
            "astId": 376,
            "contract": "contracts/FundMe.sol:FundMe",
            "label": "funditeeAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 378,
            "contract": "contracts/FundMe.sol:FundMe",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}