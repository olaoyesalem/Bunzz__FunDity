{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "Fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressCreatedToCreator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "amountToAddressFunded",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_addressName",
          "type": "string"
        }
      ],
      "name": "createMyFunDity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "creatorToAddressCreated",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "f_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "fundAddress",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funditees",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "funditeeAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getAddressBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "listOfFunDityAddresses",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "list_of_creators",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "nameToAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfAddresses",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "withdrawFromAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x338554e1f9bad96bbd7b396388439daf58f16ace12e1945c158264f3aefdc913",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1394917",
    "logsBloom": "0x
    "blockHash": "0x1c04e514320172d63046dc071f58b6bfa34f7dc8c9898adff551e9f7a6aec70e",
    "transactionHash": "0x338554e1f9bad96bbd7b396388439daf58f16ace12e1945c158264f3aefdc913",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1394917",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "77cee5330faae67257ce2fde0f679c87",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"Fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressCreatedToCreator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"amountToAddressFunded\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_addressName\",\"type\":\"string\"}],\"name\":\"createMyFunDity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"creatorToAddressCreated\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"f_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"fundAddress\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funditees\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"funditeeAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getAddressBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listOfFunDityAddresses\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"list_of_creators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"nameToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfAddresses\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"withdrawFromAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Olaoye Salem\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundMe.sol\":{\"content\":\"\\n//SPDX-License-Identifier:MIT\\npragma solidity ^0.8.7;\\n\\n\\n/**\\n @title A contract for crowd funding\\n @author Olaoye Salem\\n @notice This contract is to demo a sample funding contract\\n @dev This implements price feeds as our library\\n */\\n \\ncontract FundMe{\\n\\naddress immutable i_owner;\\nuint256 constant MINIMUM_USD = 1e10*18;// 1 dollar\\naddress [] public funders; \\naddress [] public f_funders;\\nmapping(address=>uint256) public addressToAmountFunded;\\nmapping(uint256=>address) public amountToAddressFunded;\\naddress [] public listOfFunDityAddresses;\\nuint256 public numberOfAddresses=listOfFunDityAddresses.length;\\nmapping (string=>address ) public nameToAddress;\\nFunDitees[] public funditees;\\n\\n    address []  public list_of_creators;\\n    mapping(address=>address) public creatorToAddressCreated;\\n    mapping(address=>address) public addressCreatedToCreator;\\n    struct  FunDitees{\\n    address payable funditeeAddress;\\n    string  name;\\n    }\\n    bytes32 [] private hashedAddressList;\\nconstructor(){\\n    i_owner = msg.sender;\\n}\\n\\nmodifier onlyOwner(){\\n    require(msg.sender==i_owner);\\n    _;\\n}\\nmodifier sendError(){\\n\\nrequire(msg.value>=MINIMUM_USD, \\\"Send More Eth\\\");\\n_;\\n}\\n\\n   modifier checkDuplicateName(string memory _addressName){\\n       bytes32 addressName= keccak256(abi.encode(_addressName));\\n       uint256 length = hashedAddressList.length;\\n       for(uint256 i=0; i<length;++i){\\n          \\n           require(addressName!=hashedAddressList[i],\\\" Name Has Already Been taken\\\");// Just So beautiful\\n       }\\n        _;\\n    }\\n    modifier checkAddress( address _address){\\n        uint256 length =listOfFunDityAddresses.length;\\n        for(uint256 i=0; i<length;){\\n            unchecked{\\n                ++i;\\n            }\\n            require(_address==listOfFunDityAddresses[i],\\\"Address not in the list\\\");\\n        }\\n        _;\\n    }\\n\\n    function Fund() public payable  {\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender]+=msg.value;\\n\\n}\\n    function withdraw()public {\\n        for(uint i=0; i<funders.length; i++){\\n            addressToAmountFunded[funders[i]]=0;\\n        }\\n        funders = new address[](0);\\n        (bool callSuccess, )=payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n            require(callSuccess,\\\"call Failed\\\");\\n    }\\n    \\n        \\n// function highestFunder() public view returns(address){ \\n//     //not done yet\\n//     uint256 max=addressToAmountFunded[funders[0]];\\n//     for(uint256 i = 1; i<funders.length;i++) {\\n//         if(max < addressToAmountFunded[funders[i]]) {\\n//             max = addressToAmountFunded[funders[i]];\\n//         }\\n//   return amountToAddressFunded[max];\\n\\n// }\\n      function createMyFunDity(string memory _addressName) public checkDuplicateName(_addressName)  {\\n        address caller  = msg.sender;   \\n        list_of_creators.push(caller);                                             \\n     bytes32 hashedAddressName = keccak256(abi.encode(_addressName));\\n     hashedAddressList.push(hashedAddressName);// added  hashed to the array to comapre .\\n\\n     bytes32 hashedString = keccak256(abi.encode(_addressName, msg.sender,block.timestamp));\\n     address castedAddress = address(uint160(uint256(hashedString)));\\n     address payable funditeeAddress = payable(castedAddress);\\n    funditees.push(FunDitees(funditeeAddress,_addressName));\\n     listOfFunDityAddresses.push(funditeeAddress);\\n     nameToAddress[_addressName]=funditeeAddress;\\n     creatorToAddressCreated[caller]=funditeeAddress;\\n     addressCreatedToCreator[funditeeAddress]=caller;\\n    \\n\\n    }\\n\\n    function fundAddress(address payable _address) public payable{\\n           bool sent = _address.send(msg.value);\\n        require(sent, \\\"Failed to send ETH\\\");// Done\\n    }\\n\\n    function withdrawFromAddress( address  payable  _address) public {\\n        // we need to get the addresses to the creator, which has been mapped, then\\n        // only the address can call this function\\n     \\n    //    address caller =   addressCreatedToCreator[_address];\\n    //    require(msg.sender==caller, \\\"Wrong Sender\\\");\\n    //    bool sent =payable(msg.sender).send(1000);\\n    //     require(sent, \\\"Failed to send ETH\\\");\\n    uint256 balance = address(_address).balance;\\n    bool sent =payable(address(this)).send(balance);\\n    require(sent, \\\"Failed to send ETH\\\");\\n        \\n    }\\n\\n    function getAddressBalance(address _address) public view returns(uint256){\\n        uint256 balance = address(_address).balance;\\n        return balance;\\n    }\\n\\n    receive() external payable{\\n        Fund();\\n    }\\n    fallback()external payable{\\n        Fund();\\n    }\\n\\n\\n}\\n//withdraw function is not working\",\"keccak256\":\"0xc6e4de9473eb39e823c95ccd3535341cdb7d4eec629731fb07519a9f6108f222\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405260048054905060055534801561001957600080fd5b503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505060805160601c61183e61006c6000396000505061183e6000f3fe6080604052600436106101025760003560e01c80637b904a2a11610095578063a886a67a11610064578063a886a67a14610358578063d2f947e014610395578063d37dd5e5146103be578063dc0d3dff146103fb578063ea9ac9de1461043857610111565b80637b904a2a1461029657806381b3bc3b146102b25780638ae83773146102dd578063923b930a1461031a57610111565b806344b74cd3116100d157806344b74cd3146101e95780636ce1417e146102265780636cef7b03146102305780637282b2e81461026d57610111565b806308d88aad1461011b57806335046722146101585780633ccfd60b146101955780633e47d6f3146101ac57610111565b366101115761010f610475565b005b610119610475565b005b34801561012757600080fd5b50610142600480360381019061013d919061115f565b610530565b60405161014f9190611324565b60405180910390f35b34801561016457600080fd5b5061017f600480360381019061017a9190611105565b610579565b60405161018c919061142f565b60405180910390f35b3480156101a157600080fd5b506101aa61059f565b005b3480156101b857600080fd5b506101d360048036038101906101ce9190611105565b610754565b6040516101e0919061142f565b60405180910390f35b3480156101f557600080fd5b50610210600480360381019061020b9190611105565b61076c565b60405161021d9190611324565b60405180910390f35b61022e610475565b005b34801561023c57600080fd5b50610257600480360381019061025291906111a8565b61079f565b6040516102649190611324565b60405180910390f35b34801561027957600080fd5b50610294600480360381019061028f919061115f565b6107de565b005b6102b060048036038101906102ab9190611132565b610c0d565b005b3480156102be57600080fd5b506102c7610c8a565b6040516102d4919061142f565b60405180910390f35b3480156102e957600080fd5b5061030460048036038101906102ff91906111a8565b610c90565b6040516103119190611324565b60405180910390f35b34801561032657600080fd5b50610341600480360381019061033c91906111a8565b610cc3565b60405161034f92919061133f565b60405180910390f35b34801561036457600080fd5b5061037f600480360381019061037a91906111a8565b610d9f565b60405161038c9190611324565b60405180910390f35b3480156103a157600080fd5b506103bc60048036038101906103b79190611132565b610dde565b005b3480156103ca57600080fd5b506103e560048036038101906103e091906111a8565b610e78565b6040516103f29190611324565b60405180910390f35b34801561040757600080fd5b50610422600480360381019061041d91906111a8565b610eb7565b60405161042f9190611324565b60405180910390f35b34801561044457600080fd5b5061045f600480360381019061045a9190611105565b610ef6565b60405161046c9190611324565b60405180910390f35b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461052791906114d2565b92505081905550565b6006818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff1631905080915050919050565b60005b600080549050811015610644576000600260008084815481106105c8576105c76116c2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061063c9061161b565b9150506105a2565b50600067ffffffffffffffff8111156106605761065f6116f1565b5b60405190808252806020026020018201604052801561068e5781602001602082028036833780820191505090505b50600090805190602001906106a4929190610f29565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516106cb9061130f565b60006040518083038185875af1925050503d8060008114610708576040519150601f19603f3d011682016040523d82523d6000602084013e61070d565b606091505b5050905080610751576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107489061140f565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600481815481106107af57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b806000816040516020016107f2919061136f565b6040516020818303038152906040528051906020012090506000600b80549050905060005b8181101561089157600b8181548110610833576108326116c2565b5b9060005260206000200154831415610880576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610877906113cf565b60405180910390fd5b8061088a9061161b565b9050610817565b5060003390506008819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008560405160200161090d919061136f565b604051602081830303815290604052805190602001209050600b819080600181540180825580915050600190039060005260206000200160009091909190915055600086334260405160200161096593929190611391565b60405160208183030381529060405280519060200120905060008160001c90506000819050600760405180604001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018b815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610a43929190610fb3565b5050506004819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060068a604051610aba91906112f8565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050905080610c86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7d906113ef565b60405180910390fd5b5050565b60055481565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60078181548110610cd357600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610d1c906115b8565b80601f0160208091040260200160405190810160405280929190818152602001828054610d48906115b8565b8015610d955780601f10610d6a57610100808354040283529160200191610d95565b820191906000526020600020905b815481529060010190602001808311610d7857829003601f168201915b5050505050905082565b60018181548110610daf57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff1631905060003073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050905080610e73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6a906113ef565b60405180910390fd5b505050565b60088181548110610e8857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008181548110610ec757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054828255906000526020600020908101928215610fa2579160200282015b82811115610fa15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610f49565b5b509050610faf9190611039565b5090565b828054610fbf906115b8565b90600052602060002090601f016020900481019282610fe15760008555611028565b82601f10610ffa57805160ff1916838001178555611028565b82800160010185558215611028579182015b8281111561102757825182559160200191906001019061100c565b5b5090506110359190611039565b5090565b5b8082111561105257600081600090555060010161103a565b5090565b60006110696110648461146f565b61144a565b90508281526020810184848401111561108557611084611725565b5b611090848285611576565b509392505050565b6000813590506110a7816117c3565b92915050565b6000813590506110bc816117da565b92915050565b600082601f8301126110d7576110d6611720565b5b81356110e7848260208601611056565b91505092915050565b6000813590506110ff816117f1565b92915050565b60006020828403121561111b5761111a61172f565b5b600061112984828501611098565b91505092915050565b6000602082840312156111485761114761172f565b5b6000611156848285016110ad565b91505092915050565b6000602082840312156111755761117461172f565b5b600082013567ffffffffffffffff8111156111935761119261172a565b5b61119f848285016110c2565b91505092915050565b6000602082840312156111be576111bd61172f565b5b60006111cc848285016110f0565b91505092915050565b6111de8161153a565b82525050565b6111ed81611528565b82525050565b60006111fe826114a0565b61120881856114b6565b9350611218818560208601611585565b61122181611734565b840191505092915050565b6000611237826114a0565b61124181856114c7565b9350611251818560208601611585565b80840191505092915050565b600061126a601c836114b6565b915061127582611745565b602082019050919050565b600061128d6012836114b6565b91506112988261176e565b602082019050919050565b60006112b0600b836114b6565b91506112bb82611797565b602082019050919050565b60006112d36000836114ab565b91506112de826117c0565b600082019050919050565b6112f28161156c565b82525050565b6000611304828461122c565b915081905092915050565b600061131a826112c6565b9150819050919050565b600060208201905061133960008301846111e4565b92915050565b600060408201905061135460008301856111d5565b818103602083015261136681846111f3565b90509392505050565b6000602082019050818103600083015261138981846111f3565b905092915050565b600060608201905081810360008301526113ab81866111f3565b90506113ba60208301856111e4565b6113c760408301846112e9565b949350505050565b600060208201905081810360008301526113e88161125d565b9050919050565b6000602082019050818103600083015261140881611280565b9050919050565b60006020820190508181036000830152611428816112a3565b9050919050565b600060208201905061144460008301846112e9565b92915050565b6000611454611465565b905061146082826115ea565b919050565b6000604051905090565b600067ffffffffffffffff82111561148a576114896116f1565b5b61149382611734565b9050602081019050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60006114dd8261156c565b91506114e88361156c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561151d5761151c611664565b5b828201905092915050565b60006115338261154c565b9050919050565b60006115458261154c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156115a3578082015181840152602081019050611588565b838111156115b2576000848401525b50505050565b600060028204905060018216806115d057607f821691505b602082108114156115e4576115e3611693565b5b50919050565b6115f382611734565b810181811067ffffffffffffffff82111715611612576116116116f1565b5b80604052505050565b60006116268261156c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561165957611658611664565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f204e616d652048617320416c7265616479204265656e2074616b656e00000000600082015250565b7f4661696c656420746f2073656e64204554480000000000000000000000000000600082015250565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b50565b6117cc81611528565b81146117d757600080fd5b50565b6117e38161153a565b81146117ee57600080fd5b50565b6117fa8161156c565b811461180557600080fd5b5056fea2646970667358221220c1435025562ccaf3cedea70a731148a25286c8370457c9405c045f5c538f3e9164736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106101025760003560e01c80637b904a2a11610095578063a886a67a11610064578063a886a67a14610358578063d2f947e014610395578063d37dd5e5146103be578063dc0d3dff146103fb578063ea9ac9de1461043857610111565b80637b904a2a1461029657806381b3bc3b146102b25780638ae83773146102dd578063923b930a1461031a57610111565b806344b74cd3116100d157806344b74cd3146101e95780636ce1417e146102265780636cef7b03146102305780637282b2e81461026d57610111565b806308d88aad1461011b57806335046722146101585780633ccfd60b146101955780633e47d6f3146101ac57610111565b366101115761010f610475565b005b610119610475565b005b34801561012757600080fd5b50610142600480360381019061013d919061115f565b610530565b60405161014f9190611324565b60405180910390f35b34801561016457600080fd5b5061017f600480360381019061017a9190611105565b610579565b60405161018c919061142f565b60405180910390f35b3480156101a157600080fd5b506101aa61059f565b005b3480156101b857600080fd5b506101d360048036038101906101ce9190611105565b610754565b6040516101e0919061142f565b60405180910390f35b3480156101f557600080fd5b50610210600480360381019061020b9190611105565b61076c565b60405161021d9190611324565b60405180910390f35b61022e610475565b005b34801561023c57600080fd5b50610257600480360381019061025291906111a8565b61079f565b6040516102649190611324565b60405180910390f35b34801561027957600080fd5b50610294600480360381019061028f919061115f565b6107de565b005b6102b060048036038101906102ab9190611132565b610c0d565b005b3480156102be57600080fd5b506102c7610c8a565b6040516102d4919061142f565b60405180910390f35b3480156102e957600080fd5b5061030460048036038101906102ff91906111a8565b610c90565b6040516103119190611324565b60405180910390f35b34801561032657600080fd5b50610341600480360381019061033c91906111a8565b610cc3565b60405161034f92919061133f565b60405180910390f35b34801561036457600080fd5b5061037f600480360381019061037a91906111a8565b610d9f565b60405161038c9190611324565b60405180910390f35b3480156103a157600080fd5b506103bc60048036038101906103b79190611132565b610dde565b005b3480156103ca57600080fd5b506103e560048036038101906103e091906111a8565b610e78565b6040516103f29190611324565b60405180910390f35b34801561040757600080fd5b50610422600480360381019061041d91906111a8565b610eb7565b60405161042f9190611324565b60405180910390f35b34801561044457600080fd5b5061045f600480360381019061045a9190611105565b610ef6565b60405161046c9190611324565b60405180910390f35b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461052791906114d2565b92505081905550565b6006818051602081018201805184825260208301602085012081835280955050505050506000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000808273ffffffffffffffffffffffffffffffffffffffff1631905080915050919050565b60005b600080549050811015610644576000600260008084815481106105c8576105c76116c2565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550808061063c9061161b565b9150506105a2565b50600067ffffffffffffffff8111156106605761065f6116f1565b5b60405190808252806020026020018201604052801561068e5781602001602082028036833780820191505090505b50600090805190602001906106a4929190610f29565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516106cb9061130f565b60006040518083038185875af1925050503d8060008114610708576040519150601f19603f3d011682016040523d82523d6000602084013e61070d565b606091505b5050905080610751576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107489061140f565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b600a6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600481815481106107af57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b806000816040516020016107f2919061136f565b6040516020818303038152906040528051906020012090506000600b80549050905060005b8181101561089157600b8181548110610833576108326116c2565b5b9060005260206000200154831415610880576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610877906113cf565b60405180910390fd5b8061088a9061161b565b9050610817565b5060003390506008819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008560405160200161090d919061136f565b604051602081830303815290604052805190602001209050600b819080600181540180825580915050600190039060005260206000200160009091909190915055600086334260405160200161096593929190611391565b60405160208183030381529060405280519060200120905060008160001c90506000819050600760405180604001604052808373ffffffffffffffffffffffffffffffffffffffff1681526020018b815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001019080519060200190610a43929190610fb3565b5050506004819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060068a604051610aba91906112f8565b908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600960008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600a60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050505050505050565b60008173ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050905080610c86576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7d906113ef565b60405180910390fd5b5050565b60055481565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60078181548110610cd357600080fd5b90600052602060002090600202016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001018054610d1c906115b8565b80601f0160208091040260200160405190810160405280929190818152602001828054610d48906115b8565b8015610d955780601f10610d6a57610100808354040283529160200191610d95565b820191906000526020600020905b815481529060010190602001808311610d7857829003601f168201915b5050505050905082565b60018181548110610daf57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008173ffffffffffffffffffffffffffffffffffffffff1631905060003073ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050905080610e73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6a906113ef565b60405180910390fd5b505050565b60088181548110610e8857600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008181548110610ec757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b828054828255906000526020600020908101928215610fa2579160200282015b82811115610fa15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610f49565b5b509050610faf9190611039565b5090565b828054610fbf906115b8565b90600052602060002090601f016020900481019282610fe15760008555611028565b82601f10610ffa57805160ff1916838001178555611028565b82800160010185558215611028579182015b8281111561102757825182559160200191906001019061100c565b5b5090506110359190611039565b5090565b5b8082111561105257600081600090555060010161103a565b5090565b60006110696110648461146f565b61144a565b90508281526020810184848401111561108557611084611725565b5b611090848285611576565b509392505050565b6000813590506110a7816117c3565b92915050565b6000813590506110bc816117da565b92915050565b600082601f8301126110d7576110d6611720565b5b81356110e7848260208601611056565b91505092915050565b6000813590506110ff816117f1565b92915050565b60006020828403121561111b5761111a61172f565b5b600061112984828501611098565b91505092915050565b6000602082840312156111485761114761172f565b5b6000611156848285016110ad565b91505092915050565b6000602082840312156111755761117461172f565b5b600082013567ffffffffffffffff8111156111935761119261172a565b5b61119f848285016110c2565b91505092915050565b6000602082840312156111be576111bd61172f565b5b60006111cc848285016110f0565b91505092915050565b6111de8161153a565b82525050565b6111ed81611528565b82525050565b60006111fe826114a0565b61120881856114b6565b9350611218818560208601611585565b61122181611734565b840191505092915050565b6000611237826114a0565b61124181856114c7565b9350611251818560208601611585565b80840191505092915050565b600061126a601c836114b6565b915061127582611745565b602082019050919050565b600061128d6012836114b6565b91506112988261176e565b602082019050919050565b60006112b0600b836114b6565b91506112bb82611797565b602082019050919050565b60006112d36000836114ab565b91506112de826117c0565b600082019050919050565b6112f28161156c565b82525050565b6000611304828461122c565b915081905092915050565b600061131a826112c6565b9150819050919050565b600060208201905061133960008301846111e4565b92915050565b600060408201905061135460008301856111d5565b818103602083015261136681846111f3565b90509392505050565b6000602082019050818103600083015261138981846111f3565b905092915050565b600060608201905081810360008301526113ab81866111f3565b90506113ba60208301856111e4565b6113c760408301846112e9565b949350505050565b600060208201905081810360008301526113e88161125d565b9050919050565b6000602082019050818103600083015261140881611280565b9050919050565b60006020820190508181036000830152611428816112a3565b9050919050565b600060208201905061144460008301846112e9565b92915050565b6000611454611465565b905061146082826115ea565b919050565b6000604051905090565b600067ffffffffffffffff82111561148a576114896116f1565b5b61149382611734565b9050602081019050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b600081905092915050565b60006114dd8261156c565b91506114e88361156c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561151d5761151c611664565b5b828201905092915050565b60006115338261154c565b9050919050565b60006115458261154c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156115a3578082015181840152602081019050611588565b838111156115b2576000848401525b50505050565b600060028204905060018216806115d057607f821691505b602082108114156115e4576115e3611693565b5b50919050565b6115f382611734565b810181811067ffffffffffffffff82111715611612576116116116f1565b5b80604052505050565b60006116268261156c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561165957611658611664565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f204e616d652048617320416c7265616479204265656e2074616b656e00000000600082015250565b7f4661696c656420746f2073656e64204554480000000000000000000000000000600082015250565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b50565b6117cc81611528565b81146117d757600080fd5b50565b6117e38161153a565b81146117ee57600080fd5b50565b6117fa8161156c565b811461180557600080fd5b5056fea2646970667358221220c1435025562ccaf3cedea70a731148a25286c8370457c9405c045f5c538f3e9164736f6c63430008070033",
  "devdoc": {
    "author": "Olaoye Salem",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 12,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 15,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "f_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 19,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 23,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "amountToAddressFunded",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 26,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "listOfFunDityAddresses",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 30,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "numberOfAddresses",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 34,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "nameToAddress",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_string_memory_ptr,t_address)"
      },
      {
        "astId": 38,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funditees",
        "offset": 0,
        "slot": "7",
        "type": "t_array(t_struct(FunDitees)54_storage)dyn_storage"
      },
      {
        "astId": 41,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "list_of_creators",
        "offset": 0,
        "slot": "8",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 45,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "creatorToAddressCreated",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 49,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressCreatedToCreator",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 57,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "hashedAddressList",
        "offset": 0,
        "slot": "11",
        "type": "t_array(t_bytes32)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(FunDitees)54_storage)dyn_storage": {
        "base": "t_struct(FunDitees)54_storage",
        "encoding": "dynamic_array",
        "label": "struct FundMe.FunDitees[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_string_memory_ptr,t_address)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(FunDitees)54_storage": {
        "encoding": "inplace",
        "label": "struct FundMe.FunDitees",
        "members": [
          {
            "astId": 51,
            "contract": "contracts/FundMe.sol:FundMe",
            "label": "funditeeAddress",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 53,
            "contract": "contracts/FundMe.sol:FundMe",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}