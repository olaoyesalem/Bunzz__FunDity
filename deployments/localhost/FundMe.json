{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "Fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "highestFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x09b294cd6bf82ab5e1c12dd4fd47b7dc17d029177f4428281c8541d65e854ab9",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "891953",
    "logsBloom": "0x
    "blockHash": "0x16d39e92c87cf15b4d7161d86b71e24653833f19d796df58813a4a5d1673eb90",
    "transactionHash": "0x09b294cd6bf82ab5e1c12dd4fd47b7dc17d029177f4428281c8541d65e854ab9",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "891953",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "7fadcf199cae036f57927ee26be1e5e9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"Fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"highestFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Olaoye Salem\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\npragma solidity ^0.8.7;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\n\\n/**\\n @title A contract for crowd funding\\n @author Olaoye Salem\\n @notice This contract is to demo a sample funding contract\\n @dev This implements price feeds as our library\\n */\\n \\ncontract FundMe{\\n    using PriceConverter for uint256;\\n\\naddress immutable i_owner;\\nuint256 constant MINIMUM_USD = 1e1*18;// 1 dollar\\naddress [] public funders; \\nmapping(address=>uint256) public addressToAmountFunded;\\nAggregatorV3Interface public priceFeed;\\n\\nconstructor(address priceFeedAddress){\\n    i_owner = msg.sender;\\n    priceFeed = AggregatorV3Interface(priceFeedAddress);\\n}\\n\\nmodifier onlyOwner(){\\n    require(msg.sender==i_owner);\\n    _;\\n}\\nmodifier sendError(){\\n\\nrequire(msg.value.getConversionRate(priceFeed)>=MINIMUM_USD, \\\"Send More Eth\\\");\\n_;\\n}\\n\\n    function Fund() public payable sendError  {\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender]+=msg.value;\\n\\n}\\n    function withdraw()public onlyOwner{\\n        for(uint i=0; i<funders.length; i++){\\n            addressToAmountFunded[funders[i]]=0;\\n        }\\n        funders = new address[](0);\\n        (bool callSuccess, )=payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n            require(callSuccess,\\\"call Failed\\\");\\n    }\\n\\n        \\n    function highestFunder() public returns(address){\\n\\n    }\\n\\n    receive() external payable{\\n        Fund();\\n    }\\n    fallback()external payable{\\n        Fund();\\n    }\\n    function getPrice() public view returns(uint256){\\n          (,int256 price,,,)=priceFeed.latestRoundData();\\n    return uint256(price*1e10);\\n    }\\n\\n}\\n\\n\",\"keccak256\":\"0x822a9ef2e477a58993e895d2bc87d432e67b75665f1dcc7bc51344d55f2d78e6\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"//SPDX-License-Identifier:MIT\\npragma solidity ^0.8.7;\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter{\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns(uint256){\\n          (,int256 price,,,)=priceFeed.latestRoundData();\\n    return uint256(price*1e10);\\n    }\\n\\n    function getConversionRate(uint256 eth_Amount, AggregatorV3Interface priceFeed)internal view returns(uint256){\\n       uint256 ethPrice = getPrice(priceFeed);\\n       uint256 ethAmountInUSD = (ethPrice* eth_Amount)/10**18;\\n       return ethAmountInUSD;\\n    }\\n}\\n\\n\",\"keccak256\":\"0x8e8bc3b292aa6df148494487f2ac28493a129430b1e36e6a21ef26777bd558b2\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516200102038038062001020833981810160405281019061003491906100c7565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610142565b6000815190506100c18161012b565b92915050565b6000602082840312156100dd576100dc610126565b5b60006100eb848285016100b2565b91505092915050565b60006100ff82610106565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610134816100f4565b811461013f57600080fd5b50565b60805160601c610ebf6200016160003960006102de0152610ebf6000f3fe6080604052600436106100745760003560e01c80636ce1417e1161004e5780636ce1417e1461010c578063741bef1a1461011657806398d5fdca14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780635df8a1a3146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102dc565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610817565b6104e9565b6040516100d89190610a0d565b60405180910390f35b3480156100ed57600080fd5b506100f6610501565b6040516101039190610997565b60405180910390f35b6101146101a9565b005b34801561012257600080fd5b5061012b610506565b60405161013891906109b2565b60405180910390f35b34801561014d57600080fd5b5061015661052c565b6040516101639190610a0d565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610844565b6105ec565b6040516101a09190610997565b60405180910390f35b60b46101e0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461062b90919063ffffffff16565b1015610221576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610218906109cd565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d39190610a44565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033457600080fd5b60005b6000805490508110156103d95760006001600080848154811061035d5761035c610d75565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103d190610cce565b915050610337565b50600067ffffffffffffffff8111156103f5576103f4610da4565b5b6040519080825280602002602001820160405280156104235781602001602082028036833780820191505090505b5060009080519060200190610439929190610707565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161046090610982565b60006040518083038185875af1925050503d806000811461049d576040519150601f19603f3d011682016040523d82523d6000602084013e6104a2565b606091505b50509050806104e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dd906109ed565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561059757600080fd5b505afa1580156105ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cf9190610871565b5050509150506402540be400816105e69190610acb565b91505090565b600081815481106105fc57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061063783610667565b90506000670de0b6b3a764000085836106509190610be2565b61065a9190610a9a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106b057600080fd5b505afa1580156106c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e89190610871565b5050509150506402540be400816106ff9190610acb565b915050919050565b828054828255906000526020600020908101928215610780579160200282015b8281111561077f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610727565b5b50905061078d9190610791565b5090565b5b808211156107aa576000816000905550600101610792565b5090565b6000813590506107bd81610e2d565b92915050565b6000815190506107d281610e44565b92915050565b6000813590506107e781610e5b565b92915050565b6000815190506107fc81610e5b565b92915050565b60008151905061081181610e72565b92915050565b60006020828403121561082d5761082c610dd3565b5b600061083b848285016107ae565b91505092915050565b60006020828403121561085a57610859610dd3565b5b6000610868848285016107d8565b91505092915050565b600080600080600060a0868803121561088d5761088c610dd3565b5b600061089b88828901610802565b95505060206108ac888289016107c3565b94505060406108bd888289016107ed565b93505060606108ce888289016107ed565b92505060806108df88828901610802565b9150509295509295909350565b6108f581610c3c565b82525050565b61090481610c98565b82525050565b6000610917600d83610a33565b915061092282610dd8565b602082019050919050565b600061093a600b83610a33565b915061094582610e01565b602082019050919050565b600061095d600083610a28565b915061096882610e2a565b600082019050919050565b61097c81610c78565b82525050565b600061098d82610950565b9150819050919050565b60006020820190506109ac60008301846108ec565b92915050565b60006020820190506109c760008301846108fb565b92915050565b600060208201905081810360008301526109e68161090a565b9050919050565b60006020820190508181036000830152610a068161092d565b9050919050565b6000602082019050610a226000830184610973565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a4f82610c78565b9150610a5a83610c78565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a8f57610a8e610d17565b5b828201905092915050565b6000610aa582610c78565b9150610ab083610c78565b925082610ac057610abf610d46565b5b828204905092915050565b6000610ad682610c4e565b9150610ae183610c4e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b2057610b1f610d17565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b5d57610b5c610d17565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b9a57610b99610d17565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610bd757610bd6610d17565b5b828202905092915050565b6000610bed82610c78565b9150610bf883610c78565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c3157610c30610d17565b5b828202905092915050565b6000610c4782610c58565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610ca382610caa565b9050919050565b6000610cb582610cbc565b9050919050565b6000610cc782610c58565b9050919050565b6000610cd982610c78565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d0c57610d0b610d17565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f53656e64204d6f72652045746800000000000000000000000000000000000000600082015250565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b50565b610e3681610c3c565b8114610e4157600080fd5b50565b610e4d81610c4e565b8114610e5857600080fd5b50565b610e6481610c78565b8114610e6f57600080fd5b50565b610e7b81610c82565b8114610e8657600080fd5b5056fea26469706673582212204f13884ecad06bc7fc425917b2244d825ede689c9f367b1c249f960c960142cc64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c80636ce1417e1161004e5780636ce1417e1461010c578063741bef1a1461011657806398d5fdca14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780635df8a1a3146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102dc565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610817565b6104e9565b6040516100d89190610a0d565b60405180910390f35b3480156100ed57600080fd5b506100f6610501565b6040516101039190610997565b60405180910390f35b6101146101a9565b005b34801561012257600080fd5b5061012b610506565b60405161013891906109b2565b60405180910390f35b34801561014d57600080fd5b5061015661052c565b6040516101639190610a0d565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610844565b6105ec565b6040516101a09190610997565b60405180910390f35b60b46101e0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461062b90919063ffffffff16565b1015610221576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610218906109cd565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d39190610a44565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461033457600080fd5b60005b6000805490508110156103d95760006001600080848154811061035d5761035c610d75565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555080806103d190610cce565b915050610337565b50600067ffffffffffffffff8111156103f5576103f4610da4565b5b6040519080825280602002602001820160405280156104235781602001602082028036833780820191505090505b5060009080519060200190610439929190610707565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161046090610982565b60006040518083038185875af1925050503d806000811461049d576040519150601f19603f3d011682016040523d82523d6000602084013e6104a2565b606091505b50509050806104e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dd906109ed565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561059757600080fd5b505afa1580156105ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cf9190610871565b5050509150506402540be400816105e69190610acb565b91505090565b600081815481106105fc57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061063783610667565b90506000670de0b6b3a764000085836106509190610be2565b61065a9190610a9a565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106b057600080fd5b505afa1580156106c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e89190610871565b5050509150506402540be400816106ff9190610acb565b915050919050565b828054828255906000526020600020908101928215610780579160200282015b8281111561077f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610727565b5b50905061078d9190610791565b5090565b5b808211156107aa576000816000905550600101610792565b5090565b6000813590506107bd81610e2d565b92915050565b6000815190506107d281610e44565b92915050565b6000813590506107e781610e5b565b92915050565b6000815190506107fc81610e5b565b92915050565b60008151905061081181610e72565b92915050565b60006020828403121561082d5761082c610dd3565b5b600061083b848285016107ae565b91505092915050565b60006020828403121561085a57610859610dd3565b5b6000610868848285016107d8565b91505092915050565b600080600080600060a0868803121561088d5761088c610dd3565b5b600061089b88828901610802565b95505060206108ac888289016107c3565b94505060406108bd888289016107ed565b93505060606108ce888289016107ed565b92505060806108df88828901610802565b9150509295509295909350565b6108f581610c3c565b82525050565b61090481610c98565b82525050565b6000610917600d83610a33565b915061092282610dd8565b602082019050919050565b600061093a600b83610a33565b915061094582610e01565b602082019050919050565b600061095d600083610a28565b915061096882610e2a565b600082019050919050565b61097c81610c78565b82525050565b600061098d82610950565b9150819050919050565b60006020820190506109ac60008301846108ec565b92915050565b60006020820190506109c760008301846108fb565b92915050565b600060208201905081810360008301526109e68161090a565b9050919050565b60006020820190508181036000830152610a068161092d565b9050919050565b6000602082019050610a226000830184610973565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610a4f82610c78565b9150610a5a83610c78565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a8f57610a8e610d17565b5b828201905092915050565b6000610aa582610c78565b9150610ab083610c78565b925082610ac057610abf610d46565b5b828204905092915050565b6000610ad682610c4e565b9150610ae183610c4e565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b2057610b1f610d17565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610b5d57610b5c610d17565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610b9a57610b99610d17565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610bd757610bd6610d17565b5b828202905092915050565b6000610bed82610c78565b9150610bf883610c78565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c3157610c30610d17565b5b828202905092915050565b6000610c4782610c58565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610ca382610caa565b9050919050565b6000610cb582610cbc565b9050919050565b6000610cc782610c58565b9050919050565b6000610cd982610c78565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d0c57610d0b610d17565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f53656e64204d6f72652045746800000000000000000000000000000000000000600082015250565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b50565b610e3681610c3c565b8114610e4157600080fd5b50565b610e4d81610c4e565b8114610e5857600080fd5b50565b610e6481610c78565b8114610e6f57600080fd5b50565b610e7b81610c82565b8114610e8657600080fd5b5056fea26469706673582212204f13884ecad06bc7fc425917b2244d825ede689c9f367b1c249f960c960142cc64736f6c63430008070033",
  "devdoc": {
    "author": "Olaoye Salem",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 63,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 67,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}