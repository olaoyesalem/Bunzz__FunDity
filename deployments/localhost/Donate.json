{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "campaignName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_i_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_desription",
          "type": "string"
        }
      ],
      "name": "Contract_Created",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Fund_Withdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_contract",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "Funds_Donated",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "campaignName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x6c006dc1cfa4dca95fe59d3eca27191f1ceb439e6dae16d5079bfd01dfda1de7",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "554008",
    "logsBloom": "0x00000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000004000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000200000000000001000000000002000000000000000000000000000000000000000000000000000000000000000000000800000000000000000",
    "blockHash": "0x6f818be193f9add6eb83c36e30b850fc7a66d8bfcc4f9b9d17599069b08b839a",
    "transactionHash": "0x6c006dc1cfa4dca95fe59d3eca27191f1ceb439e6dae16d5079bfd01dfda1de7",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 2,
        "transactionHash": "0x6c006dc1cfa4dca95fe59d3eca27191f1ceb439e6dae16d5079bfd01dfda1de7",
        "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "topics": [
          "0xb0c23c661f7a83f4f85f6009189862c40156b6a2676806c56313762b8ef05d21",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266",
          "0x000000000000000000000000e7f1725e7734ce288f8367e1bb143e90bb3f0512"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000055065616365000000000000000000000000000000000000000000000000000000",
        "logIndex": 0,
        "blockHash": "0x6f818be193f9add6eb83c36e30b850fc7a66d8bfcc4f9b9d17599069b08b839a"
      }
    ],
    "blockNumber": 2,
    "cumulativeGasUsed": "554008",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "Salem",
    "Peace",
    "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
  ],
  "numDeployments": 1,
  "solcInputHash": "d8ac7753a853b5b04b2faa3ed176df39",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"campaignName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_i_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_desription\",\"type\":\"string\"}],\"name\":\"Contract_Created\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Fund_Withdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_contract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Funds_Donated\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"campaignName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Olaoye Salem\",\"kind\":\"dev\",\"methods\":{\"withdraw()\":{\"details\":\"Only reciepient can withdraw funds from this contractall funds can be remooved anytime\"}},\"title\":\"Fund Me\",\"version\":1},\"userdoc\":{\"events\":{\"Contract_Created(address,address,string)\":{\"notice\":\"only fundraiser/recipient can perform action\"}},\"kind\":\"user\",\"methods\":{\"withdraw()\":{\"notice\":\"allows for withdrawing funds from contract\"}},\"notice\":\"A fundraising contract on the blockchain/ similar to GoFundMe\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Donate.sol\":\"Donate\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Donate.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\n/// @title Donate factory contract\\r\\n/// @author Olaoye Salem\\r\\n/// @notice A factory contract for the main FundMe contract\\r\\ncontract DonateFactory{\\r\\n// So, we create addresses here and fund,withdraw function.\\r\\n  address[] public deployedFundraisers;// we keep track of all the fundraisers here.\\r\\n  mapping(string=>address)public nameToAddress;\\r\\n  bytes32 [] hashedAddressList;\\r\\n  mapping(address=>address) creatorToAddressCreated;\\r\\n  mapping(address=>uint256) private addressToAmountFunded;\\r\\n  address [] public funders;  \\r\\n    address  i_owner;\\r\\n\\r\\n\\r\\n\\r\\n    modifier checkDuplicateName(string memory _addressName){\\r\\n       bytes32 addressName= keccak256(abi.encode(_addressName));\\r\\n       uint256 length = hashedAddressList.length;\\r\\n       for(uint256 i=0; i<length;++i){\\r\\n          \\r\\n           require(addressName!=hashedAddressList[i],\\\" Name Has Already Been taken\\\");// Just So beautiful\\r\\n       }\\r\\n        _;\\r\\n    }\\r\\n  \\r\\n    modifier onlyOwner(){\\r\\n    require(msg.sender==i_owner);\\r\\n    _;\\r\\n}\\r\\n\\r\\nmodifier hasFunded(){\\r\\n    require(addressToAmountFunded[msg.sender]>0,\\\" User has To Fund Before Creating A camapaign\\\");\\r\\n_;\\r\\n}\\r\\n\\r\\n    constructor(){\\r\\n    i_owner = msg.sender;\\r\\n}\\r\\n\\r\\n    ///@notice This function creates Donate by calling constructor of Donate\\r\\n    ///@param campaignName the firstname of the recipient\\r\\n    ///@param _description the need for the fundraising\\r\\n    // users must donate any amount before they can create aa campaign\\r\\n    function createDonate (string memory campaignName, string memory _description ) hasFunded checkDuplicateName(campaignName) public{\\r\\n        bytes32 hashedString = keccak256(abi.encode(campaignName));\\r\\n        hashedAddressList.push(hashedString);\\r\\n\\r\\n        address newDonate = address(new Donate(campaignName,  _description,msg.sender));\\r\\n        deployedFundraisers.push(newDonate); \\r\\n        nameToAddress[campaignName]=newDonate;\\r\\n\\r\\n        \\r\\n    }\\r\\n\\r\\n   function Fund() public payable  {\\r\\n        funders.push(msg.sender);\\r\\n        addressToAmountFunded[msg.sender]+=msg.value;\\r\\n\\r\\n}\\r\\n    function withdraw()public onlyOwner{\\r\\n        for(uint i=0; i<funders.length; i++){\\r\\n            addressToAmountFunded[funders[i]]=0;\\r\\n        }\\r\\n        funders = new address[](0);\\r\\n        (bool callSuccess, )=payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n            require(callSuccess,\\\"call Failed\\\");\\r\\n    }\\r\\n\\r\\n    function balance() public view returns(uint256){\\r\\n        uint256 balance = address(this).balance;\\r\\n        return balance;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n///@title Fund Me\\r\\n///@author Olaoye Salem\\r\\n///@notice A fundraising contract on the blockchain/ similar to GoFundMe\\r\\ncontract Donate{\\r\\n       bytes32 [] private hashedAddressList;\\r\\n       mapping (address=>uint256) private donorsAmount;\\r\\n       address [] donators;\\r\\n       address  i_owner;\\r\\n       \\r\\n\\r\\n\\r\\n         ///@notice only fundraiser/recipient can perform action\\r\\n\\r\\n          //EVENTS\\r\\n    //event for when a contract is created. Shows owner address, contract address and description of fundraiser\\r\\n    event Contract_Created(address indexed _from, address indexed _contract, string _desription );\\r\\n    // event for when money is donated. Shows address of donor, fundraiser contract donated to and value donated\\r\\n    event Funds_Donated(address indexed _from, address indexed _contract, uint _value);\\r\\n       \\r\\n    //event for when recipient withdraws money from the fundraiser contract. shows the owner address, contract address and amount withdrawn\\r\\n    event Fund_Withdrawn(address indexed _from, address indexed _contract, uint _value);\\r\\n\\r\\n  modifier onlyOwner(){\\r\\n    require(msg.sender==i_owner); //the real owner is the one that created the instnace of the address.\\r\\n  \\r\\n    _;\\r\\n}\\r\\n\\r\\n  string public description;\\r\\n    //Campaign name of reciepient\\r\\n    string public campaignName;\\r\\n    //number of donors in the fundraiser\\r\\n    \\r\\n\\r\\n       constructor(string memory campaignName, string memory _description, address _i_owner) public {\\r\\n        i_owner = _i_owner;\\r\\n        campaignName = campaignName;\\r\\n        description = _description;\\r\\n\\r\\n     \\r\\n        \\r\\n     emit Contract_Created(i_owner, address(this), description);\\r\\n    }\\r\\n\\r\\n\\r\\n    function donate() public  payable{  \\r\\n        donators.push(msg.sender); \\r\\n        donorsAmount[msg.sender] = msg.value; //keeps track of the amount that each donor contributes;  \\r\\n     emit Funds_Donated(msg.sender,address(this), msg.value);//sends out event that funds has been donated to this fundraiser contract\\r\\n    }\\r\\n\\r\\n\\r\\n    \\r\\n    ///@notice allows for withdrawing funds from contract\\r\\n    ///@dev Only reciepient can withdraw funds from this contract\\r\\n    ///@dev all funds can be remooved anytime\\r\\n    function withdraw() public onlyOwner {//removed onlyOwner\\r\\n        //balance stores the amount of money in the contract at this moment\\r\\n        uint balance = address(this).balance;\\r\\n      emit Fund_Withdrawn(i_owner,address(this),balance);//sends out event that contract owner/recipient have withdrew some funds\\r\\n       \\r\\n          (bool callSuccess, )=payable(msg.sender).call{value: balance}(\\\"\\\");\\r\\n            require(callSuccess,\\\"call Failed\\\");\\r\\n    }\\r\\n\\r\\n    function getBalance(address _address) public view returns(uint256){\\r\\n        uint256 balance = address(_address).balance;\\r\\n        return balance;\\r\\n    }\\r\\n\\r\\n\\r\\nreceive() external payable{\\r\\n        donate();\\r\\n    }\\r\\n    fallback()external payable{\\r\\n        donate();\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n\",\"keccak256\":\"0x57bc85f0ff2d0b7a60e1b31621e116dbbb23bd77263a51d4d4adec707bda16ec\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000d8438038062000d84833981810160405281019062000037919062000269565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600490805190602001906200009092919062000124565b503073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167fb0c23c661f7a83f4f85f6009189862c40156b6a2676806c56313762b8ef05d2160046040516200011391906200038f565b60405180910390a3505050620005ab565b8280546200013290620004a2565b90600052602060002090601f016020900481019282620001565760008555620001a2565b82601f106200017157805160ff1916838001178555620001a2565b82800160010185558215620001a2579182015b82811115620001a157825182559160200191906001019062000184565b5b509050620001b19190620001b5565b5090565b5b80821115620001d0576000816000905550600101620001b6565b5090565b6000620001eb620001e584620003dc565b620003b3565b9050828152602081018484840111156200020a576200020962000571565b5b620002178482856200046c565b509392505050565b600081519050620002308162000591565b92915050565b600082601f8301126200024e576200024d6200056c565b5b815162000260848260208601620001d4565b91505092915050565b6000806000606084860312156200028557620002846200057b565b5b600084015167ffffffffffffffff811115620002a657620002a562000576565b5b620002b48682870162000236565b935050602084015167ffffffffffffffff811115620002d857620002d762000576565b5b620002e68682870162000236565b9250506040620002f9868287016200021f565b9150509250925092565b600081546200031281620004a2565b6200031e818662000427565b945060018216600081146200033c57600181146200034f5762000386565b60ff198316865260208601935062000386565b6200035a8562000412565b60005b838110156200037e578154818901526001820191506020810190506200035d565b808801955050505b50505092915050565b60006020820190508181036000830152620003ab818462000303565b905092915050565b6000620003bf620003d2565b9050620003cd8282620004d8565b919050565b6000604051905090565b600067ffffffffffffffff821115620003fa57620003f96200053d565b5b620004058262000580565b9050602081019050919050565b60008190508160005260206000209050919050565b600082825260208201905092915050565b600062000445826200044c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200048c5780820151818401526020810190506200046f565b838111156200049c576000848401525b50505050565b60006002820490506001821680620004bb57607f821691505b60208210811415620004d257620004d16200050e565b5b50919050565b620004e38262000580565b810181811067ffffffffffffffff821117156200050557620005046200053d565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6200059c8162000438565b8114620005a857600080fd5b50565b6107c980620005bb6000396000f3fe60806040526004361061004e5760003560e01c80630724fda9146100675780633ccfd60b146100925780637284e416146100a9578063ed88c68e146100d4578063f8b2cb4f146100de5761005d565b3661005d5761005b61011b565b005b61006561011b565b005b34801561007357600080fd5b5061007c610229565b60405161008991906105e6565b60405180910390f35b34801561009e57600080fd5b506100a76102b7565b005b3480156100b557600080fd5b506100be61044d565b6040516100cb91906105e6565b60405180910390f35b6100dc61011b565b005b3480156100ea57600080fd5b5061010560048036038101906101009190610516565b6104db565b6040516101129190610628565b60405180910390f35b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f702ce8e2a7e3a8bc7ba50d9187386c652637c1e0a97f4c8ad4c2481e1ae0861a3460405161021f9190610628565b60405180910390a3565b60058054610236906106d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610262906106d9565b80156102af5780601f10610284576101008083540402835291602001916102af565b820191906000526020600020905b81548152906001019060200180831161029257829003601f168201915b505050505081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461031157600080fd5b60004790503073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f60a3bf8490aa32c80db056237a7c8321c0a03596ab5a9dffe3f32151b7254fb7836040516103959190610628565b60405180910390a360003373ffffffffffffffffffffffffffffffffffffffff16826040516103c3906105d1565b60006040518083038185875af1925050503d8060008114610400576040519150601f19603f3d011682016040523d82523d6000602084013e610405565b606091505b5050905080610449576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044090610608565b60405180910390fd5b5050565b6004805461045a906106d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610486906106d9565b80156104d35780601f106104a8576101008083540402835291602001916104d3565b820191906000526020600020905b8154815290600101906020018083116104b657829003601f168201915b505050505081565b6000808273ffffffffffffffffffffffffffffffffffffffff1631905080915050919050565b6000813590506105108161077c565b92915050565b60006020828403121561052c5761052b61073a565b5b600061053a84828501610501565b91505092915050565b600061054e82610643565b6105588185610659565b93506105688185602086016106a6565b6105718161073f565b840191505092915050565b6000610589600b83610659565b915061059482610750565b602082019050919050565b60006105ac60008361064e565b91506105b782610779565b600082019050919050565b6105cb8161069c565b82525050565b60006105dc8261059f565b9150819050919050565b600060208201905081810360008301526106008184610543565b905092915050565b600060208201905081810360008301526106218161057c565b9050919050565b600060208201905061063d60008301846105c2565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006106758261067c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156106c45780820151818401526020810190506106a9565b838111156106d3576000848401525b50505050565b600060028204905060018216806106f157607f821691505b602082108114156107055761070461070b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b50565b6107858161066a565b811461079057600080fd5b5056fea26469706673582212208b20f5b5e6f166fc0b3cbea1f28276c349de49d43250d55001c138edb7663ab964736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c80630724fda9146100675780633ccfd60b146100925780637284e416146100a9578063ed88c68e146100d4578063f8b2cb4f146100de5761005d565b3661005d5761005b61011b565b005b61006561011b565b005b34801561007357600080fd5b5061007c610229565b60405161008991906105e6565b60405180910390f35b34801561009e57600080fd5b506100a76102b7565b005b3480156100b557600080fd5b506100be61044d565b6040516100cb91906105e6565b60405180910390f35b6100dc61011b565b005b3480156100ea57600080fd5b5061010560048036038101906101009190610516565b6104db565b6040516101129190610628565b60405180910390f35b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f702ce8e2a7e3a8bc7ba50d9187386c652637c1e0a97f4c8ad4c2481e1ae0861a3460405161021f9190610628565b60405180910390a3565b60058054610236906106d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610262906106d9565b80156102af5780601f10610284576101008083540402835291602001916102af565b820191906000526020600020905b81548152906001019060200180831161029257829003601f168201915b505050505081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461031157600080fd5b60004790503073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f60a3bf8490aa32c80db056237a7c8321c0a03596ab5a9dffe3f32151b7254fb7836040516103959190610628565b60405180910390a360003373ffffffffffffffffffffffffffffffffffffffff16826040516103c3906105d1565b60006040518083038185875af1925050503d8060008114610400576040519150601f19603f3d011682016040523d82523d6000602084013e610405565b606091505b5050905080610449576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044090610608565b60405180910390fd5b5050565b6004805461045a906106d9565b80601f0160208091040260200160405190810160405280929190818152602001828054610486906106d9565b80156104d35780601f106104a8576101008083540402835291602001916104d3565b820191906000526020600020905b8154815290600101906020018083116104b657829003601f168201915b505050505081565b6000808273ffffffffffffffffffffffffffffffffffffffff1631905080915050919050565b6000813590506105108161077c565b92915050565b60006020828403121561052c5761052b61073a565b5b600061053a84828501610501565b91505092915050565b600061054e82610643565b6105588185610659565b93506105688185602086016106a6565b6105718161073f565b840191505092915050565b6000610589600b83610659565b915061059482610750565b602082019050919050565b60006105ac60008361064e565b91506105b782610779565b600082019050919050565b6105cb8161069c565b82525050565b60006105dc8261059f565b9150819050919050565b600060208201905081810360008301526106008184610543565b905092915050565b600060208201905081810360008301526106218161057c565b9050919050565b600060208201905061063d60008301846105c2565b92915050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006106758261067c565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156106c45780820151818401526020810190506106a9565b838111156106d3576000848401525b50505050565b600060028204905060018216806106f157607f821691505b602082108114156107055761070461070b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f63616c6c204661696c6564000000000000000000000000000000000000000000600082015250565b50565b6107858161066a565b811461079057600080fd5b5056fea26469706673582212208b20f5b5e6f166fc0b3cbea1f28276c349de49d43250d55001c138edb7663ab964736f6c63430008070033",
  "devdoc": {
    "author": "Olaoye Salem",
    "kind": "dev",
    "methods": {
      "withdraw()": {
        "details": "Only reciepient can withdraw funds from this contractall funds can be remooved anytime"
      }
    },
    "title": "Fund Me",
    "version": 1
  },
  "userdoc": {
    "events": {
      "Contract_Created(address,address,string)": {
        "notice": "only fundraiser/recipient can perform action"
      }
    },
    "kind": "user",
    "methods": {
      "withdraw()": {
        "notice": "allows for withdrawing funds from contract"
      }
    },
    "notice": "A fundraising contract on the blockchain/ similar to GoFundMe",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 252,
        "contract": "contracts/Donate.sol:Donate",
        "label": "hashedAddressList",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 256,
        "contract": "contracts/Donate.sol:Donate",
        "label": "donorsAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 259,
        "contract": "contracts/Donate.sol:Donate",
        "label": "donators",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 261,
        "contract": "contracts/Donate.sol:Donate",
        "label": "i_owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 299,
        "contract": "contracts/Donate.sol:Donate",
        "label": "description",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 301,
        "contract": "contracts/Donate.sol:Donate",
        "label": "campaignName",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}