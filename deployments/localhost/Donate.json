{
  "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "campaignName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "campaignName",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donate",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "recipient",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc4920178f7eadc451f6625cc0833895d645e66bcdbb64a45185957bc460c4a1e",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
    "transactionIndex": 0,
    "gasUsed": "482083",
    "logsBloom": "0x
    "blockHash": "0x9be18a83954b445b8cf8c0bdd70f9dc2925d8f06c2bc99d0888f0a060fbc4979",
    "transactionHash": "0xc4920178f7eadc451f6625cc0833895d645e66bcdbb64a45185957bc460c4a1e",
    "logs": [],
    "blockNumber": 4,
    "cumulativeGasUsed": "482083",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "Salem",
    "Peace",
    "0xF9680D99D6C9589e2a93a78A04A279e509205945"
  ],
  "numDeployments": 1,
  "solcInputHash": "b8c8578223ea57656efcf13c45ac360d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"campaignName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"campaignName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"recipient\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"withdraw()\":{\"details\":\"Only reciepient can withdraw funds from this contractall funds can be remooved anytime\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"withdraw()\":{\"notice\":\"allows for withdrawing funds from contract\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Donate.sol\":\"Donate\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Donate.sol\":{\"content\":\"// SPDX-License-Identifier:MIT\\r\\npragma solidity ^0.8.7;\\r\\n\\r\\n// Firstly we wan to fund the contract\\r\\n// next we want to be able to withdraw just only the owner\\r\\n\\r\\n//Thirdly, create a campaign\\r\\n// That inherits the fund, withdraw, and other issues.\\r\\n\\r\\ncontract DonateFactory{\\r\\n// So, we create addresses here and fund,withdraw function.\\r\\n  address[] public deployedFundraisers;// we keep track of all the fundraisers here.\\r\\n  mapping(string=>address)public nameToAddress;\\r\\n  bytes32 [] hashedAddressList;\\r\\n\\r\\n    modifier checkDuplicateName(string memory _addressName){\\r\\n       bytes32 addressName= keccak256(abi.encode(_addressName));\\r\\n       uint256 length = hashedAddressList.length;\\r\\n       for(uint256 i=0; i<length;++i){\\r\\n          \\r\\n           require(addressName!=hashedAddressList[i],\\\" Name Has Already Been taken\\\");// Just So beautiful\\r\\n       }\\r\\n        _;\\r\\n    }\\r\\n  \\r\\n    ///@notice This function creates Donate by calling constructor of Donate\\r\\n    ///@param campaignName the firstname of the recipient\\r\\n    ///@param _description the need for the fundraising\\r\\n    function createDonate (string memory campaignName, string memory _description ) checkDuplicateName(campaignName) public{\\r\\n        bytes32 hashedString = keccak256(abi.encode(campaignName));\\r\\n        hashedAddressList.push(hashedString);\\r\\n\\r\\n        address newDonate = address(new Donate(campaignName,  _description, msg.sender));\\r\\n        deployedFundraisers.push(newDonate); \\r\\n        nameToAddress[campaignName]=newDonate;\\r\\n    }\\r\\n\\r\\naddress [] public funders;  \\r\\nmapping(address=>uint256) public addressToAmountFunded;\\r\\naddress  i_owner;\\r\\n\\r\\n    modifier onlyOwner(){\\r\\n    require(msg.sender==i_owner);\\r\\n    _;\\r\\n}\\r\\n\\r\\n    constructor(){\\r\\n    i_owner = msg.sender;\\r\\n}\\r\\n\\r\\n   function Fund() public payable  {\\r\\n        funders.push(msg.sender);\\r\\n        addressToAmountFunded[msg.sender]+=msg.value;\\r\\n\\r\\n}\\r\\n    function withdraw()public onlyOwner{\\r\\n        for(uint i=0; i<funders.length; i++){\\r\\n            addressToAmountFunded[funders[i]]=0;\\r\\n        }\\r\\n        funders = new address[](0);\\r\\n        (bool callSuccess, )=payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\r\\n            require(callSuccess,\\\"call Failed\\\");\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\ncontract Donate{\\r\\n       bytes32 [] private hashedAddressList;\\r\\n       mapping (address=>uint256) private donorsAmount;\\r\\n       address [] donators;\\r\\n\\r\\n         ///@notice only fundraiser/recipient can perform action\\r\\naddress  i_owner;\\r\\n\\r\\n    modifier onlyOwner(){\\r\\n    require(msg.sender==i_owner);\\r\\n    _;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n    //address of contract owner,that will be recieving the donations\\r\\n    address public recipient;\\r\\n    //the reason for creating fundraising campaign\\r\\n    string public description;\\r\\n    //Campaign name of reciepient\\r\\n    string public campaignName;\\r\\n    //number of donors in the fundraiser\\r\\n    \\r\\n\\r\\n       constructor(string memory campaignName, string memory _description, address _recipient) public {\\r\\n        \\r\\n        campaignName = campaignName;\\r\\n     \\r\\n        description = _description;\\r\\n\\r\\n        recipient = _recipient;\\r\\n        \\r\\n    //    emit Contract_Created(_recipient, address(this), _description);\\r\\n    }\\r\\n\\r\\n\\r\\n    function donate() public  payable{  \\r\\n        donators.push(msg.sender); \\r\\n        donorsAmount[msg.sender] = msg.value; //keeps track of the amount that each donor contributes;  \\r\\n     //   emit Funds_Donated(msg.sender,address(this), msg.value);//sends out event that funds has been donated to this fundraiser contract\\r\\n    }\\r\\n\\r\\n\\r\\n    \\r\\n    ///@notice allows for withdrawing funds from contract\\r\\n    ///@dev Only reciepient can withdraw funds from this contract\\r\\n    ///@dev all funds can be remooved anytime\\r\\n    function withdraw() public onlyOwner{\\r\\n        //balance stores the amount of money in the contract at this moment\\r\\n        uint balance = address(this).balance;\\r\\n        // checks if there is money in the account\\r\\n        require(\\r\\n            balance != 0,\\r\\n            \\\"Contract balance is 0\\\"\\r\\n        );\\r\\n        \\r\\n      //  emit Fund_Withdrawn(recipient,address(this),balance);//sends out event that contract owner/recipient have withdrew some funds\\r\\n       \\r\\n        bool sent =payable(recipient).send(address(this).balance);\\r\\n    require(sent, \\\"Failed to send ETH\\\");\\r\\n    }\\r\\n}\\r\\n\\r\\n\\r\\n// I am done with the smart contract for now.\\r\\n//I'll try connecting it with javascript \\r\\n// add events\\r\\n//is there test for events\",\"keccak256\":\"0xac56e67cda865e5767bb5b252df6c7f0c20f8daca2e179c32afb045b4035626f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162000aff38038062000aff8339818101604052810190620000379190620001df565b81600590805190602001906200004f9291906200009a565b5080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200044b565b828054620000a89062000342565b90600052602060002090601f016020900481019282620000cc576000855562000118565b82601f10620000e757805160ff191683800117855562000118565b8280016001018555821562000118579182015b8281111562000117578251825591602001919060010190620000fa565b5b5090506200012791906200012b565b5090565b5b80821115620001465760008160009055506001016200012c565b5090565b6000620001616200015b84620002a2565b62000279565b90508281526020810184848401111562000180576200017f62000411565b5b6200018d8482856200030c565b509392505050565b600081519050620001a68162000431565b92915050565b600082601f830112620001c457620001c36200040c565b5b8151620001d68482602086016200014a565b91505092915050565b600080600060608486031215620001fb57620001fa6200041b565b5b600084015167ffffffffffffffff8111156200021c576200021b62000416565b5b6200022a86828701620001ac565b935050602084015167ffffffffffffffff8111156200024e576200024d62000416565b5b6200025c86828701620001ac565b92505060406200026f8682870162000195565b9150509250925092565b60006200028562000298565b905062000293828262000378565b919050565b6000604051905090565b600067ffffffffffffffff821115620002c057620002bf620003dd565b5b620002cb8262000420565b9050602081019050919050565b6000620002e582620002ec565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b838110156200032c5780820151818401526020810190506200030f565b838111156200033c576000848401525b50505050565b600060028204905060018216806200035b57607f821691505b60208210811415620003725762000371620003ae565b5b50919050565b620003838262000420565b810181811067ffffffffffffffff82111715620003a557620003a4620003dd565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b6200043c81620002d8565b81146200044857600080fd5b50565b6106a4806200045b6000396000f3fe60806040526004361061004a5760003560e01c80630724fda91461004f5780633ccfd60b1461007a57806366d003ac146100915780637284e416146100bc578063ed88c68e146100e7575b600080fd5b34801561005b57600080fd5b506100646100f1565b60405161007191906104c7565b60405180910390f35b34801561008657600080fd5b5061008f61017f565b005b34801561009d57600080fd5b506100a66102c1565b6040516100b391906104ac565b60405180910390f35b3480156100c857600080fd5b506100d16102e7565b6040516100de91906104c7565b60405180910390f35b6100ef610375565b005b600680546100fe906105aa565b80601f016020809104026020016040519081016040528092919081815260200182805461012a906105aa565b80156101775780601f1061014c57610100808354040283529160200191610177565b820191906000526020600020905b81548152906001019060200180831161015a57829003601f168201915b505050505081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101d957600080fd5b60004790506000811415610222576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610219906104e9565b60405180910390fd5b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050509050806102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b490610509565b60405180910390fd5b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600580546102f4906105aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610320906105aa565b801561036d5780601f106103425761010080835404028352916020019161036d565b820191906000526020600020905b81548152906001019060200180831161035057829003601f168201915b505050505081565b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b61042781610545565b82525050565b600061043882610529565b6104428185610534565b9350610452818560208601610577565b61045b8161060b565b840191505092915050565b6000610473601583610534565b915061047e8261061c565b602082019050919050565b6000610496601283610534565b91506104a182610645565b602082019050919050565b60006020820190506104c1600083018461041e565b92915050565b600060208201905081810360008301526104e1818461042d565b905092915050565b6000602082019050818103600083015261050281610466565b9050919050565b6000602082019050818103600083015261052281610489565b9050919050565b600081519050919050565b600082825260208201905092915050565b600061055082610557565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b8381101561059557808201518184015260208101905061057a565b838111156105a4576000848401525b50505050565b600060028204905060018216806105c257607f821691505b602082108114156105d6576105d56105dc565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f436f6e74726163742062616c616e636520697320300000000000000000000000600082015250565b7f4661696c656420746f2073656e6420455448000000000000000000000000000060008201525056fea2646970667358221220c92bff3dabd96013a337685843fffb89c83daae431c6c3697516d5eee7488cd664736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061004a5760003560e01c80630724fda91461004f5780633ccfd60b1461007a57806366d003ac146100915780637284e416146100bc578063ed88c68e146100e7575b600080fd5b34801561005b57600080fd5b506100646100f1565b60405161007191906104c7565b60405180910390f35b34801561008657600080fd5b5061008f61017f565b005b34801561009d57600080fd5b506100a66102c1565b6040516100b391906104ac565b60405180910390f35b3480156100c857600080fd5b506100d16102e7565b6040516100de91906104c7565b60405180910390f35b6100ef610375565b005b600680546100fe906105aa565b80601f016020809104026020016040519081016040528092919081815260200182805461012a906105aa565b80156101775780601f1061014c57610100808354040283529160200191610177565b820191906000526020600020905b81548152906001019060200180831161015a57829003601f168201915b505050505081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101d957600080fd5b60004790506000811415610222576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610219906104e9565b60405180910390fd5b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f193505050509050806102bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102b490610509565b60405180910390fd5b5050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600580546102f4906105aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610320906105aa565b801561036d5780601f106103425761010080835404028352916020019161036d565b820191906000526020600020905b81548152906001019060200180831161035057829003601f168201915b505050505081565b6002339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b61042781610545565b82525050565b600061043882610529565b6104428185610534565b9350610452818560208601610577565b61045b8161060b565b840191505092915050565b6000610473601583610534565b915061047e8261061c565b602082019050919050565b6000610496601283610534565b91506104a182610645565b602082019050919050565b60006020820190506104c1600083018461041e565b92915050565b600060208201905081810360008301526104e1818461042d565b905092915050565b6000602082019050818103600083015261050281610466565b9050919050565b6000602082019050818103600083015261052281610489565b9050919050565b600081519050919050565b600082825260208201905092915050565b600061055082610557565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60005b8381101561059557808201518184015260208101905061057a565b838111156105a4576000848401525b50505050565b600060028204905060018216806105c257607f821691505b602082108114156105d6576105d56105dc565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b7f436f6e74726163742062616c616e636520697320300000000000000000000000600082015250565b7f4661696c656420746f2073656e6420455448000000000000000000000000000060008201525056fea2646970667358221220c92bff3dabd96013a337685843fffb89c83daae431c6c3697516d5eee7488cd664736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "withdraw()": {
        "details": "Only reciepient can withdraw funds from this contractall funds can be remooved anytime"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "withdraw()": {
        "notice": "allows for withdrawing funds from contract"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 214,
        "contract": "contracts/Donate.sol:Donate",
        "label": "hashedAddressList",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_bytes32)dyn_storage"
      },
      {
        "astId": 218,
        "contract": "contracts/Donate.sol:Donate",
        "label": "donorsAmount",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 221,
        "contract": "contracts/Donate.sol:Donate",
        "label": "donators",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 224,
        "contract": "contracts/Donate.sol:Donate",
        "label": "i_owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 237,
        "contract": "contracts/Donate.sol:Donate",
        "label": "recipient",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 239,
        "contract": "contracts/Donate.sol:Donate",
        "label": "description",
        "offset": 0,
        "slot": "5",
        "type": "t_string_storage"
      },
      {
        "astId": 241,
        "contract": "contracts/Donate.sol:Donate",
        "label": "campaignName",
        "offset": 0,
        "slot": "6",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}